$date
	Thu Jun 03 06:52:46 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_alu $end
$var wire 8 ! R [7:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$var reg 3 $ Op [2:0] $end
$var reg 1 % c_in $end
$scope module alu $end
$var wire 8 & A [7:0] $end
$var wire 8 ' B [7:0] $end
$var wire 3 ( Op [2:0] $end
$var wire 8 ) R [7:0] $end
$var wire 1 % c_in $end
$var wire 8 * r [7:0] $end
$var wire 8 + q [7:0] $end
$var wire 8 , out_sub [7:0] $end
$var wire 8 - out_rshift [7:0] $end
$var wire 8 . out_lshift [7:0] $end
$var wire 8 / out_add [7:0] $end
$var wire 1 0 c $end
$var reg 8 1 Reg3 [7:0] $end
$scope module div8 $end
$var wire 8 2 A [7:0] $end
$var wire 8 3 B [7:0] $end
$var wire 8 4 Q_out [7:0] $end
$var wire 8 5 R [7:0] $end
$var wire 8 6 sub_out [7:0] $end
$var wire 1 7 cout $end
$var wire 8 8 add_out [7:0] $end
$var wire 8 9 a7 [7:0] $end
$var wire 8 : a6 [7:0] $end
$var wire 8 ; a5 [7:0] $end
$var wire 8 < a4 [7:0] $end
$var wire 8 = a3 [7:0] $end
$var wire 8 > a2 [7:0] $end
$var wire 8 ? a1 [7:0] $end
$var wire 8 @ a0 [7:0] $end
$var reg 8 A Q [7:0] $end
$var reg 8 B R1 [7:0] $end
$var reg 8 C R2 [7:0] $end
$var reg 8 D R3 [7:0] $end
$scope module fa $end
$var wire 8 E a [7:0] $end
$var wire 8 F b [7:0] $end
$var wire 1 G carryin $end
$var wire 8 H sum [7:0] $end
$var wire 1 7 cout $end
$var wire 1 I c1 $end
$scope module fa4 $end
$var wire 4 J a [3:0] $end
$var wire 4 K b [3:0] $end
$var wire 1 G carryin $end
$var wire 4 L sum [3:0] $end
$var wire 1 I cout $end
$var wire 1 M c3 $end
$var wire 1 N c2 $end
$var wire 1 O c1 $end
$scope module fa0 $end
$var wire 1 P a $end
$var wire 1 Q a1 $end
$var wire 1 R a2 $end
$var wire 1 S b $end
$var wire 1 T c1 $end
$var wire 1 G carryin $end
$var wire 1 O cout $end
$var wire 1 U sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 V a $end
$var wire 1 W a1 $end
$var wire 1 X a2 $end
$var wire 1 Y b $end
$var wire 1 Z c1 $end
$var wire 1 O carryin $end
$var wire 1 N cout $end
$var wire 1 [ sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 \ a $end
$var wire 1 ] a1 $end
$var wire 1 ^ a2 $end
$var wire 1 _ b $end
$var wire 1 ` c1 $end
$var wire 1 N carryin $end
$var wire 1 M cout $end
$var wire 1 a sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 b a $end
$var wire 1 c a1 $end
$var wire 1 d a2 $end
$var wire 1 e b $end
$var wire 1 f c1 $end
$var wire 1 M carryin $end
$var wire 1 I cout $end
$var wire 1 g sum $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 4 h a [3:0] $end
$var wire 4 i b [3:0] $end
$var wire 1 I carryin $end
$var wire 4 j sum [3:0] $end
$var wire 1 7 cout $end
$var wire 1 k c3 $end
$var wire 1 l c2 $end
$var wire 1 m c1 $end
$scope module fa0 $end
$var wire 1 n a $end
$var wire 1 o a1 $end
$var wire 1 p a2 $end
$var wire 1 q b $end
$var wire 1 r c1 $end
$var wire 1 I carryin $end
$var wire 1 m cout $end
$var wire 1 s sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 t a $end
$var wire 1 u a1 $end
$var wire 1 v a2 $end
$var wire 1 w b $end
$var wire 1 x c1 $end
$var wire 1 m carryin $end
$var wire 1 l cout $end
$var wire 1 y sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 z a $end
$var wire 1 { a1 $end
$var wire 1 | a2 $end
$var wire 1 } b $end
$var wire 1 ~ c1 $end
$var wire 1 l carryin $end
$var wire 1 k cout $end
$var wire 1 !" sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 "" a $end
$var wire 1 #" a1 $end
$var wire 1 $" a2 $end
$var wire 1 %" b $end
$var wire 1 &" c1 $end
$var wire 1 k carryin $end
$var wire 1 7 cout $end
$var wire 1 '" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module sl $end
$var wire 8 (" A [7:0] $end
$var wire 8 )" q [7:0] $end
$upscope $end
$scope module sl2 $end
$var wire 8 *" A [7:0] $end
$var wire 8 +" q [7:0] $end
$upscope $end
$scope module sl3 $end
$var wire 8 ," A [7:0] $end
$var wire 8 -" q [7:0] $end
$upscope $end
$scope module sl4 $end
$var wire 8 ." A [7:0] $end
$var wire 8 /" q [7:0] $end
$upscope $end
$scope module sl5 $end
$var wire 8 0" A [7:0] $end
$var wire 8 1" q [7:0] $end
$upscope $end
$scope module sl6 $end
$var wire 8 2" A [7:0] $end
$var wire 8 3" q [7:0] $end
$upscope $end
$scope module sl7 $end
$var wire 8 4" A [7:0] $end
$var wire 8 5" q [7:0] $end
$upscope $end
$scope module sl8 $end
$var wire 8 6" A [7:0] $end
$var wire 8 7" q [7:0] $end
$upscope $end
$scope module sub $end
$var wire 8 8" A [7:0] $end
$var wire 8 9" B [7:0] $end
$var wire 8 :" result [7:0] $end
$var wire 1 ;" cout $end
$var wire 8 <" comp [7:0] $end
$scope module fa8 $end
$var wire 8 =" a [7:0] $end
$var wire 1 >" carryin $end
$var wire 8 ?" sum [7:0] $end
$var wire 1 ;" cout $end
$var wire 1 @" c1 $end
$var wire 8 A" b [7:0] $end
$scope module fa4 $end
$var wire 4 B" a [3:0] $end
$var wire 4 C" b [3:0] $end
$var wire 1 >" carryin $end
$var wire 4 D" sum [3:0] $end
$var wire 1 @" cout $end
$var wire 1 E" c3 $end
$var wire 1 F" c2 $end
$var wire 1 G" c1 $end
$scope module fa0 $end
$var wire 1 H" a $end
$var wire 1 I" a1 $end
$var wire 1 J" a2 $end
$var wire 1 K" b $end
$var wire 1 L" c1 $end
$var wire 1 >" carryin $end
$var wire 1 G" cout $end
$var wire 1 M" sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 N" a $end
$var wire 1 O" a1 $end
$var wire 1 P" a2 $end
$var wire 1 Q" b $end
$var wire 1 R" c1 $end
$var wire 1 G" carryin $end
$var wire 1 F" cout $end
$var wire 1 S" sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 T" a $end
$var wire 1 U" a1 $end
$var wire 1 V" a2 $end
$var wire 1 W" b $end
$var wire 1 X" c1 $end
$var wire 1 F" carryin $end
$var wire 1 E" cout $end
$var wire 1 Y" sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 Z" a $end
$var wire 1 [" a1 $end
$var wire 1 \" a2 $end
$var wire 1 ]" b $end
$var wire 1 ^" c1 $end
$var wire 1 E" carryin $end
$var wire 1 @" cout $end
$var wire 1 _" sum $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 4 `" a [3:0] $end
$var wire 4 a" b [3:0] $end
$var wire 1 @" carryin $end
$var wire 4 b" sum [3:0] $end
$var wire 1 ;" cout $end
$var wire 1 c" c3 $end
$var wire 1 d" c2 $end
$var wire 1 e" c1 $end
$scope module fa0 $end
$var wire 1 f" a $end
$var wire 1 g" a1 $end
$var wire 1 h" a2 $end
$var wire 1 i" b $end
$var wire 1 j" c1 $end
$var wire 1 @" carryin $end
$var wire 1 e" cout $end
$var wire 1 k" sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 l" a $end
$var wire 1 m" a1 $end
$var wire 1 n" a2 $end
$var wire 1 o" b $end
$var wire 1 p" c1 $end
$var wire 1 e" carryin $end
$var wire 1 d" cout $end
$var wire 1 q" sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 r" a $end
$var wire 1 s" a1 $end
$var wire 1 t" a2 $end
$var wire 1 u" b $end
$var wire 1 v" c1 $end
$var wire 1 d" carryin $end
$var wire 1 c" cout $end
$var wire 1 w" sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 x" a $end
$var wire 1 y" a1 $end
$var wire 1 z" a2 $end
$var wire 1 {" b $end
$var wire 1 |" c1 $end
$var wire 1 c" carryin $end
$var wire 1 ;" cout $end
$var wire 1 }" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module tc $end
$var wire 8 ~" A [7:0] $end
$var wire 8 !# q [7:0] $end
$var wire 1 "# cout $end
$var wire 8 ## comp [7:0] $end
$scope module fa8 $end
$var wire 8 $# a [7:0] $end
$var wire 8 %# b [7:0] $end
$var wire 1 &# carryin $end
$var wire 8 '# sum [7:0] $end
$var wire 1 "# cout $end
$var wire 1 (# c1 $end
$scope module fa4 $end
$var wire 4 )# a [3:0] $end
$var wire 4 *# b [3:0] $end
$var wire 1 &# carryin $end
$var wire 4 +# sum [3:0] $end
$var wire 1 (# cout $end
$var wire 1 ,# c3 $end
$var wire 1 -# c2 $end
$var wire 1 .# c1 $end
$scope module fa0 $end
$var wire 1 /# a $end
$var wire 1 0# a1 $end
$var wire 1 1# a2 $end
$var wire 1 2# b $end
$var wire 1 3# c1 $end
$var wire 1 &# carryin $end
$var wire 1 .# cout $end
$var wire 1 4# sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 5# a $end
$var wire 1 6# a1 $end
$var wire 1 7# a2 $end
$var wire 1 8# b $end
$var wire 1 9# c1 $end
$var wire 1 .# carryin $end
$var wire 1 -# cout $end
$var wire 1 :# sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 ;# a $end
$var wire 1 <# a1 $end
$var wire 1 =# a2 $end
$var wire 1 ># b $end
$var wire 1 ?# c1 $end
$var wire 1 -# carryin $end
$var wire 1 ,# cout $end
$var wire 1 @# sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 A# a $end
$var wire 1 B# a1 $end
$var wire 1 C# a2 $end
$var wire 1 D# b $end
$var wire 1 E# c1 $end
$var wire 1 ,# carryin $end
$var wire 1 (# cout $end
$var wire 1 F# sum $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 4 G# a [3:0] $end
$var wire 4 H# b [3:0] $end
$var wire 1 (# carryin $end
$var wire 4 I# sum [3:0] $end
$var wire 1 "# cout $end
$var wire 1 J# c3 $end
$var wire 1 K# c2 $end
$var wire 1 L# c1 $end
$scope module fa0 $end
$var wire 1 M# a $end
$var wire 1 N# a1 $end
$var wire 1 O# a2 $end
$var wire 1 P# b $end
$var wire 1 Q# c1 $end
$var wire 1 (# carryin $end
$var wire 1 L# cout $end
$var wire 1 R# sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 S# a $end
$var wire 1 T# a1 $end
$var wire 1 U# a2 $end
$var wire 1 V# b $end
$var wire 1 W# c1 $end
$var wire 1 L# carryin $end
$var wire 1 K# cout $end
$var wire 1 X# sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 Y# a $end
$var wire 1 Z# a1 $end
$var wire 1 [# a2 $end
$var wire 1 \# b $end
$var wire 1 ]# c1 $end
$var wire 1 K# carryin $end
$var wire 1 J# cout $end
$var wire 1 ^# sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 _# a $end
$var wire 1 `# a1 $end
$var wire 1 a# a2 $end
$var wire 1 b# b $end
$var wire 1 c# c1 $end
$var wire 1 J# carryin $end
$var wire 1 "# cout $end
$var wire 1 d# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module fadd $end
$var wire 8 e# a [7:0] $end
$var wire 8 f# b [7:0] $end
$var wire 1 % carryin $end
$var wire 8 g# sum [7:0] $end
$var wire 1 0 cout $end
$var wire 1 h# c1 $end
$scope module fa4 $end
$var wire 4 i# a [3:0] $end
$var wire 4 j# b [3:0] $end
$var wire 1 % carryin $end
$var wire 4 k# sum [3:0] $end
$var wire 1 h# cout $end
$var wire 1 l# c3 $end
$var wire 1 m# c2 $end
$var wire 1 n# c1 $end
$scope module fa0 $end
$var wire 1 o# a $end
$var wire 1 p# a1 $end
$var wire 1 q# a2 $end
$var wire 1 r# b $end
$var wire 1 s# c1 $end
$var wire 1 % carryin $end
$var wire 1 n# cout $end
$var wire 1 t# sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 u# a $end
$var wire 1 v# a1 $end
$var wire 1 w# a2 $end
$var wire 1 x# b $end
$var wire 1 y# c1 $end
$var wire 1 n# carryin $end
$var wire 1 m# cout $end
$var wire 1 z# sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 {# a $end
$var wire 1 |# a1 $end
$var wire 1 }# a2 $end
$var wire 1 ~# b $end
$var wire 1 !$ c1 $end
$var wire 1 m# carryin $end
$var wire 1 l# cout $end
$var wire 1 "$ sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 #$ a $end
$var wire 1 $$ a1 $end
$var wire 1 %$ a2 $end
$var wire 1 &$ b $end
$var wire 1 '$ c1 $end
$var wire 1 l# carryin $end
$var wire 1 h# cout $end
$var wire 1 ($ sum $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 4 )$ a [3:0] $end
$var wire 4 *$ b [3:0] $end
$var wire 1 h# carryin $end
$var wire 4 +$ sum [3:0] $end
$var wire 1 0 cout $end
$var wire 1 ,$ c3 $end
$var wire 1 -$ c2 $end
$var wire 1 .$ c1 $end
$scope module fa0 $end
$var wire 1 /$ a $end
$var wire 1 0$ a1 $end
$var wire 1 1$ a2 $end
$var wire 1 2$ b $end
$var wire 1 3$ c1 $end
$var wire 1 h# carryin $end
$var wire 1 .$ cout $end
$var wire 1 4$ sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 5$ a $end
$var wire 1 6$ a1 $end
$var wire 1 7$ a2 $end
$var wire 1 8$ b $end
$var wire 1 9$ c1 $end
$var wire 1 .$ carryin $end
$var wire 1 -$ cout $end
$var wire 1 :$ sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 ;$ a $end
$var wire 1 <$ a1 $end
$var wire 1 =$ a2 $end
$var wire 1 >$ b $end
$var wire 1 ?$ c1 $end
$var wire 1 -$ carryin $end
$var wire 1 ,$ cout $end
$var wire 1 @$ sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 A$ a $end
$var wire 1 B$ a1 $end
$var wire 1 C$ a2 $end
$var wire 1 D$ b $end
$var wire 1 E$ c1 $end
$var wire 1 ,$ carryin $end
$var wire 1 0 cout $end
$var wire 1 F$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module fsub $end
$var wire 8 G$ A [7:0] $end
$var wire 8 H$ B [7:0] $end
$var wire 8 I$ result [7:0] $end
$var wire 1 J$ cout $end
$var wire 8 K$ comp [7:0] $end
$scope module fa8 $end
$var wire 8 L$ a [7:0] $end
$var wire 1 M$ carryin $end
$var wire 8 N$ sum [7:0] $end
$var wire 1 J$ cout $end
$var wire 1 O$ c1 $end
$var wire 8 P$ b [7:0] $end
$scope module fa4 $end
$var wire 4 Q$ a [3:0] $end
$var wire 4 R$ b [3:0] $end
$var wire 1 M$ carryin $end
$var wire 4 S$ sum [3:0] $end
$var wire 1 O$ cout $end
$var wire 1 T$ c3 $end
$var wire 1 U$ c2 $end
$var wire 1 V$ c1 $end
$scope module fa0 $end
$var wire 1 W$ a $end
$var wire 1 X$ a1 $end
$var wire 1 Y$ a2 $end
$var wire 1 Z$ b $end
$var wire 1 [$ c1 $end
$var wire 1 M$ carryin $end
$var wire 1 V$ cout $end
$var wire 1 \$ sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 ]$ a $end
$var wire 1 ^$ a1 $end
$var wire 1 _$ a2 $end
$var wire 1 `$ b $end
$var wire 1 a$ c1 $end
$var wire 1 V$ carryin $end
$var wire 1 U$ cout $end
$var wire 1 b$ sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 c$ a $end
$var wire 1 d$ a1 $end
$var wire 1 e$ a2 $end
$var wire 1 f$ b $end
$var wire 1 g$ c1 $end
$var wire 1 U$ carryin $end
$var wire 1 T$ cout $end
$var wire 1 h$ sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 i$ a $end
$var wire 1 j$ a1 $end
$var wire 1 k$ a2 $end
$var wire 1 l$ b $end
$var wire 1 m$ c1 $end
$var wire 1 T$ carryin $end
$var wire 1 O$ cout $end
$var wire 1 n$ sum $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 4 o$ a [3:0] $end
$var wire 4 p$ b [3:0] $end
$var wire 1 O$ carryin $end
$var wire 4 q$ sum [3:0] $end
$var wire 1 J$ cout $end
$var wire 1 r$ c3 $end
$var wire 1 s$ c2 $end
$var wire 1 t$ c1 $end
$scope module fa0 $end
$var wire 1 u$ a $end
$var wire 1 v$ a1 $end
$var wire 1 w$ a2 $end
$var wire 1 x$ b $end
$var wire 1 y$ c1 $end
$var wire 1 O$ carryin $end
$var wire 1 t$ cout $end
$var wire 1 z$ sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 {$ a $end
$var wire 1 |$ a1 $end
$var wire 1 }$ a2 $end
$var wire 1 ~$ b $end
$var wire 1 !% c1 $end
$var wire 1 t$ carryin $end
$var wire 1 s$ cout $end
$var wire 1 "% sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 #% a $end
$var wire 1 $% a1 $end
$var wire 1 %% a2 $end
$var wire 1 &% b $end
$var wire 1 '% c1 $end
$var wire 1 s$ carryin $end
$var wire 1 r$ cout $end
$var wire 1 (% sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 )% a $end
$var wire 1 *% a1 $end
$var wire 1 +% a2 $end
$var wire 1 ,% b $end
$var wire 1 -% c1 $end
$var wire 1 r$ carryin $end
$var wire 1 J$ cout $end
$var wire 1 .% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module tc $end
$var wire 8 /% A [7:0] $end
$var wire 8 0% q [7:0] $end
$var wire 1 1% cout $end
$var wire 8 2% comp [7:0] $end
$scope module fa8 $end
$var wire 8 3% a [7:0] $end
$var wire 8 4% b [7:0] $end
$var wire 1 5% carryin $end
$var wire 8 6% sum [7:0] $end
$var wire 1 1% cout $end
$var wire 1 7% c1 $end
$scope module fa4 $end
$var wire 4 8% a [3:0] $end
$var wire 4 9% b [3:0] $end
$var wire 1 5% carryin $end
$var wire 4 :% sum [3:0] $end
$var wire 1 7% cout $end
$var wire 1 ;% c3 $end
$var wire 1 <% c2 $end
$var wire 1 =% c1 $end
$scope module fa0 $end
$var wire 1 >% a $end
$var wire 1 ?% a1 $end
$var wire 1 @% a2 $end
$var wire 1 A% b $end
$var wire 1 B% c1 $end
$var wire 1 5% carryin $end
$var wire 1 =% cout $end
$var wire 1 C% sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 D% a $end
$var wire 1 E% a1 $end
$var wire 1 F% a2 $end
$var wire 1 G% b $end
$var wire 1 H% c1 $end
$var wire 1 =% carryin $end
$var wire 1 <% cout $end
$var wire 1 I% sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 J% a $end
$var wire 1 K% a1 $end
$var wire 1 L% a2 $end
$var wire 1 M% b $end
$var wire 1 N% c1 $end
$var wire 1 <% carryin $end
$var wire 1 ;% cout $end
$var wire 1 O% sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 P% a $end
$var wire 1 Q% a1 $end
$var wire 1 R% a2 $end
$var wire 1 S% b $end
$var wire 1 T% c1 $end
$var wire 1 ;% carryin $end
$var wire 1 7% cout $end
$var wire 1 U% sum $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 4 V% a [3:0] $end
$var wire 4 W% b [3:0] $end
$var wire 1 7% carryin $end
$var wire 4 X% sum [3:0] $end
$var wire 1 1% cout $end
$var wire 1 Y% c3 $end
$var wire 1 Z% c2 $end
$var wire 1 [% c1 $end
$scope module fa0 $end
$var wire 1 \% a $end
$var wire 1 ]% a1 $end
$var wire 1 ^% a2 $end
$var wire 1 _% b $end
$var wire 1 `% c1 $end
$var wire 1 7% carryin $end
$var wire 1 [% cout $end
$var wire 1 a% sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 b% a $end
$var wire 1 c% a1 $end
$var wire 1 d% a2 $end
$var wire 1 e% b $end
$var wire 1 f% c1 $end
$var wire 1 [% carryin $end
$var wire 1 Z% cout $end
$var wire 1 g% sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 h% a $end
$var wire 1 i% a1 $end
$var wire 1 j% a2 $end
$var wire 1 k% b $end
$var wire 1 l% c1 $end
$var wire 1 Z% carryin $end
$var wire 1 Y% cout $end
$var wire 1 m% sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 n% a $end
$var wire 1 o% a1 $end
$var wire 1 p% a2 $end
$var wire 1 q% b $end
$var wire 1 r% c1 $end
$var wire 1 Y% carryin $end
$var wire 1 1% cout $end
$var wire 1 s% sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module lshift $end
$var wire 8 t% A [7:0] $end
$var wire 8 u% q [7:0] $end
$upscope $end
$scope module rshift $end
$var wire 8 v% A [7:0] $end
$var wire 8 w% q [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1010 w%
b10100 v%
b101000 u%
b10100 t%
1s%
0r%
0q%
0p%
1o%
1n%
1m%
0l%
0k%
0j%
1i%
1h%
1g%
0f%
0e%
0d%
1c%
1b%
1a%
0`%
0_%
0^%
1]%
1\%
0[%
0Z%
0Y%
b1111 X%
b0 W%
b1111 V%
1U%
0T%
0S%
0R%
1Q%
1P%
0O%
0N%
0M%
0L%
0K%
0J%
1I%
0H%
0G%
0F%
0E%
0D%
0C%
1B%
1A%
0@%
0?%
1>%
1=%
0<%
0;%
b1010 :%
b1 9%
b1001 8%
07%
b11111010 6%
05%
b1 4%
b11111001 3%
b11111010 2%
01%
b11111001 0%
b110 /%
0.%
0-%
1,%
1+%
1*%
0)%
0(%
0'%
1&%
1%%
1$%
0#%
0"%
0!%
1~$
1}$
1|$
0{$
0z$
1y$
1x$
0w$
0v$
1u$
1t$
1s$
1r$
b0 q$
b1111 p$
b1 o$
1n$
0m$
1l$
0k$
1j$
0i$
1h$
0g$
0f$
0e$
1d$
1c$
1b$
0a$
1`$
0_$
1^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
b1110 S$
b1010 R$
b100 Q$
b11111010 P$
0O$
b1110 N$
0M$
b10100 L$
b11111010 K$
1J$
b1110 I$
b110 H$
b10100 G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
14$
03$
02$
01$
10$
1/$
0.$
0-$
0,$
b1 +$
b0 *$
b1 )$
1($
0'$
0&$
0%$
0$$
0#$
0"$
1!$
1~#
0}#
0|#
1{#
1z#
0y#
1x#
0w#
1v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
1l#
b1010 k#
b110 j#
b100 i#
0h#
b11010 g#
b110 f#
b10100 e#
1d#
0c#
0b#
0a#
1`#
1_#
1^#
0]#
0\#
0[#
1Z#
1Y#
1X#
0W#
0V#
0U#
1T#
1S#
1R#
0Q#
0P#
0O#
1N#
1M#
0L#
0K#
0J#
b1111 I#
b0 H#
b1111 G#
1F#
0E#
0D#
0C#
1B#
1A#
0@#
0?#
0>#
0=#
0<#
0;#
1:#
09#
08#
07#
06#
05#
04#
13#
12#
01#
00#
1/#
1.#
0-#
0,#
b1010 +#
b1 *#
b1001 )#
0(#
b11111010 '#
0&#
b1 %#
b11111001 $#
b11111010 ##
0"#
b11111001 !#
b110 ~"
1}"
0|"
1{"
0z"
1y"
0x"
1w"
0v"
1u"
0t"
1s"
0r"
1q"
0p"
1o"
0n"
1m"
0l"
1k"
0j"
1i"
0h"
1g"
0f"
0e"
0d"
0c"
b1111 b"
b1111 a"
b0 `"
1_"
0^"
1]"
0\"
1["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
1S"
0R"
1Q"
0P"
1O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
b1010 D"
b1010 C"
b0 B"
b11111010 A"
0@"
b11111010 ?"
0>"
b0 ="
b11111010 <"
0;"
b11111010 :"
b110 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b10000000 2"
b10000000 1"
b1000000 0"
b1000000 /"
b10100000 ."
b10100000 -"
b1010000 ,"
b1010000 +"
b101000 *"
b101000 )"
b10100 ("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
b0 j
b0 i
b0 h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
1U
0T
1S
0R
1Q
0P
0O
0N
0M
b1 L
b1 K
b0 J
0I
b1 H
0G
b1 F
b0 E
b110 D
b0 C
b101000 B
b0 A
b101000 @
b1010000 ?
b10100000 >
b1000000 =
b10000000 <
b0 ;
b0 :
b0 9
b1 8
07
b11111010 6
b0 5
b0 4
b110 3
b10100 2
b11010 1
00
b11010 /
b101000 .
b1010 -
b1110 ,
b0 +
b0 *
b11010 )
b0 (
b110 '
b10100 &
0%
b0 $
b110 #
b10100 "
b11010 !
$end
#1
b1010000 B
#2
b10100000 B
#3
b11111011 6
b11111011 :"
b11111011 ?"
b1011 D"
1M"
1I"
1H"
b1 B"
b1000000 B
b1 *
b1 5
b1 C
b1 8"
b1 ="
#4
1Y"
0M"
b11111100 6
b11111100 :"
b11111100 ?"
b1100 D"
0S"
1F"
0I"
0O"
1R"
0H"
1N"
b10 B"
b10000000 B
b10 *
b10 5
b10 C
b10 8"
b10 ="
#5
0;"
1}"
0z"
0c"
1w"
0t"
0d"
1q"
0n"
0e"
b1111 b"
1k"
0h"
0@"
1_"
0\"
0E"
1M"
1S"
0F"
b11111111 6
b11111111 :"
b11111111 ?"
b1111 D"
1Y"
0V"
1I"
1O"
0R"
1U"
1H"
0N"
1T"
b101 B"
b0 B
b101 *
b101 5
b101 C
b101 8"
b101 ="
#6
1;"
0}"
1z"
1c"
0w"
1t"
1d"
0q"
1n"
1e"
b0 b"
0k"
1h"
0M"
0S"
1F"
1Y"
b100 6
b100 :"
b100 ?"
b100 D"
0_"
1@"
0I"
0O"
1R"
0U"
0["
1^"
0H"
1N"
0T"
1Z"
b1010 B"
b1010 *
b1010 5
b1010 C
b1010 8"
b1010 ="
#7
0Y"
b11 8
b11 H
b11 L
1[
b10 6
b10 :"
b10 ?"
b10 D"
1S"
0F"
1W
1O"
0R"
1V
0N"
b10 J
b1000 B"
b10 +
b10 4
b10 A
b10 E
b1000 *
b1000 5
b1000 C
b1000 8"
b1000 ="
#8
0;"
1}"
0z"
0c"
1w"
0t"
0d"
1a
1q"
0n"
1N
0e"
0[
1X
1Y"
b1111 b"
1k"
0h"
b100 8
b100 H
b100 L
0U
1O
0S"
1F"
b11111100 6
b11111100 :"
b11111100 ?"
b1100 D"
1_"
0@"
0Q
1T
0O"
1R"
1["
0^"
1P
1N"
0Z"
b11 J
b10 B"
b11 +
b11 4
b11 A
b11 E
b10 *
b10 5
b10 C
b10 8"
b10 ="
#10
b1110 !
b1110 )
b1110 1
b11011 /
b11011 g#
b1011 k#
1t#
b1 $
b1 (
1%
#20
b1010 !
b1010 )
b1010 1
b10 $
b10 (
#30
b101000 !
b101000 )
b101000 1
b11 $
b11 (
#40
b11 !
b11 )
b11 1
b100 $
b100 (
#50
b10 !
b10 )
b10 1
b101 $
b101 (
#60
b110 $
b110 (
#70
